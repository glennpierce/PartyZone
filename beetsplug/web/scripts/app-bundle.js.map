{"version":3,"sources":["allplay.ts","tracks.ts","queue.ts","albums.ts","speakers.ts","app.ts","environment.ts","loading-indicator.ts","main.ts","pager.ts","track-edit.ts","resources/index.ts","/home/glenn/devel/PartyZone/beetsplug/web/src/albums.html","/home/glenn/devel/PartyZone/beetsplug/web/src/queue.css","/home/glenn/devel/PartyZone/beetsplug/web/src/app-colors.html","/home/glenn/devel/PartyZone/beetsplug/web/src/tracks.css","/home/glenn/devel/PartyZone/beetsplug/web/src/app.html","/home/glenn/devel/PartyZone/beetsplug/web/src/nav-bar.html","/home/glenn/devel/PartyZone/beetsplug/web/src/queue.html","/home/glenn/devel/PartyZone/beetsplug/web/src/speakers.html","/home/glenn/devel/PartyZone/beetsplug/web/src/track-edit.html","/home/glenn/devel/PartyZone/beetsplug/web/src/tracks.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;IAiBA;QAME,YAAY,EAAU,EAAE,IAAY,EAAE,QAAiB;YACpD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;YACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC5B,CAAC;IACH,CAAC;IAXY,eAAO,UAWnB,CAAA;IASD;QAGI;YACI,IAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC;QAED,UAAU;YACN,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,EAAU,CAAC;QAC7C,CAAC;QAED,UAAU,CAAC,KAAc;YACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC;IACL,CAAC;IAdY,sBAAc,iBAc1B,CAAA;IAGD;QAOE,YAAoB,aAA+B;YAA/B,kBAAa,GAAb,aAAa,CAAkB;YANnD,UAAK,GAAa,KAAK,CAAC;YACxB,WAAM,GAAkB,EAAE,CAAC;YAMzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YAEjC,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM;gBACxB,MAAM;qBACH,wBAAwB,EAAE;qBAC1B,WAAW,CAAC,0BAA0B,CAAC;qBACvC,YAAY,CAAC;oBACF,OAAO,EAAE;wBACL,cAAc,EAAE,kBAAkB;wBAClC,QAAQ,EAAE,kBAAkB;qBAC/B;iBACJ,CAAC;qBACT,eAAe,CAAC;oBACb,OAAO,CAAC,OAAO;wBAOX,MAAM,CAAC,OAAO,CAAC;oBACnB,CAAC;oBACD,QAAQ,CAAC,QAAQ;wBAEb,MAAM,CAAC,QAAQ,CAAC;oBACpB,CAAC;iBACJ,CAAC,CAAA;YACN,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;QAED,YAAY,CAAC,QAAQ;YACnB,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;gBACf,MAAM,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YACrC,CAAC;YACD,MAAM,CAAC,QAAQ,CAAC;QAClB,CAAC;QAEK,WAAW;;gBAGf,MAAM,KAAK,CAAC;gBAEZ,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;oBAC7C,MAAM,EAAE,KAAK;iBAEhB,CAAC,CAAC;gBAEH,IAAI,MAAM,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACnC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACpB,CAAC;SAAA;QAEK,SAAS;;gBACX,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC1B,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;gBAC7B,CAAC;gBAED,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACvB,CAAC;SAAA;QAED,QAAQ,CAAC,EAAU;YACf,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5D,CAAC;QAEK,SAAS;;gBAGb,MAAM,KAAK,CAAC;gBAEZ,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;oBAC7C,MAAM,EAAE,KAAK;iBAChB,CAAC,CAAC;gBAEH,IAAI,MAAM,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACnC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC1B,CAAC;SAAA;QAEK,iBAAiB,CAAC,QAAiB;;gBAGvC,MAAM,KAAK,CAAC;gBAEZ,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,QAAQ,EAAE;oBAC9D,MAAM,EAAE,KAAK;iBAChB,CAAC,CAAC;gBAEH,IAAI,MAAM,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACnC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACzB,CAAC;SAAA;QAEa,UAAU,CAAC,KAAa;;gBACpC,IAAI,UAAU,GAAG,EAAE,UAAU,EAAE,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;gBAC9D,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE;oBAClC,MAAM,EAAE,MAAM;oBACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;iBACnC,CAAC,CAAC;gBACH,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;YAC/C,CAAC;SAAA;QAEK,cAAc,CAAC,IAAc;;gBACjC,MAAM,KAAK,CAAC;gBAEZ,IAAI,UAAU,GAAG,EAAC,MAAM,EAAE,IAAI,EAAE,CAAC;gBACjC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;oBAC9B,MAAM,EAAE,MAAM;oBACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;iBACnC,CAAC,CAAC;YACL,CAAC;SAAA;QAEK,SAAS,CAAC,IAAa,EAAE,MAAsB;;gBACnD,MAAM,KAAK,CAAC;gBAEZ,IAAI,UAAU,GAAG,EAAC,MAAM,EAAG,IAAI,EAAE,QAAQ,EAAG,MAAM,EAAC,CAAA;gBAEnD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;oBAC7B,MAAM,EAAE,MAAM;oBACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;iBACnC,CAAC,CAAC;YACL,CAAC;SAAA;QAEK,YAAY;;gBAChB,MAAM,KAAK,CAAC;gBAEZ,IAAI,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;gBAClD,IAAI,MAAM,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACnC,IAAI,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;gBAChC,MAAM,CAAC,SAAS,CAAC;YACnB,CAAC;SAAA;QAEK,WAAW,CAAC,IAAa;;gBAC7B,MAAM,KAAK,CAAC;gBAEZ,IAAI,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC;gBACzD,IAAI,MAAM,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACnC,IAAI,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;gBAC7B,MAAM,CAAC,MAAM,CAAC;YAChB,CAAC;SAAA;QAEK,mBAAmB,CAAC,KAAa;;gBAErC,MAAM,KAAK,CAAC;gBAEZ,IAAI,UAAU,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;gBACnC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;oBACtB,MAAM,EAAE,MAAM;oBACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;iBACnC,CAAC,CAAC;YACL,CAAC;SAAA;QAEK,KAAK;;gBAET,MAAM,KAAK,CAAC;gBAEZ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;oBACrB,MAAM,EAAE,KAAK;iBAChB,CAAC,CAAC;YACL,CAAC;SAAA;QAEK,IAAI;;gBAER,MAAM,KAAK,CAAC;gBAEZ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;oBACpB,MAAM,EAAE,MAAM;iBACjB,CAAC;qBACD,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;gBACzB,CAAC;gBACD,CAAC;gBAAA,CAAC;YACJ,CAAC;SAAA;QAEK,UAAU,CAAC,cAA+B;;gBAE9C,MAAM,KAAK,CAAC;gBAEZ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAG1B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC3D,MAAM,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3D,CAAC;gBAED,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;oBACzB,MAAM,EAAE,MAAM;iBACjB,CAAC,CAAC;YACL,CAAC;SAAA;QAEK,WAAW;;gBACf,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;oBACjC,MAAM,EAAE,MAAM;iBACjB,CAAC,CAAC;YACL,CAAC;SAAA;QAEK,WAAW;;gBACf,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;oBACjC,MAAM,EAAE,MAAM;iBACjB,CAAC,CAAC;YACL,CAAC;SAAA;QAEK,SAAS,CAAC,KAAc;;gBAE5B,MAAM,KAAK,CAAC;gBAEZ,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;gBAE3B,IAAI,UAAU,GAAG,EAAE,UAAU,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC;gBAC1C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;oBACzB,MAAM,EAAE,MAAM;oBAId,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;iBACnC,CAAC,CAAC;YACL,CAAC;SAAA;QAEK,YAAY,CAAC,OAAgB;;gBAEjC,MAAM,KAAK,CAAC;gBAEZ,IAAI,UAAU,GAAG,EAAE,WAAW,EAAG,OAAO,CAAC,EAAE,EAAG,QAAQ,EAAE,OAAO,CAAC,MAAM,EAAC,CAAC;gBACxE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;oBAC7B,MAAM,EAAE,MAAM;oBACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;iBACnC,CAAC,CAAC;YACL,CAAC;SAAA;QAEK,WAAW;;gBAEf,MAAM,KAAK,CAAC;gBACZ,IAAI,GAAG,GAAG,IAAI,KAAK,EAAW,CAAC;gBAE/B,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;oBAClD,MAAM,EAAE,KAAK;iBAChB,CAAC,CAAC;gBAEH,IAAI,MAAM,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACnC,IAAI,QAAQ,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,CAAC;gBACvC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;oBACrB,GAAG,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAA;gBACnD,CAAC;gBACD,MAAM,CAAC,GAAG,CAAC;YAMb,CAAC;SAAA;QAEK,cAAc,CAAC,QAAyB;;gBAE1C,IAAI,UAAU,GAAG,KAAK,EAAO,CAAC;gBAE9B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACzC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACpB,UAAU,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,QAAQ,EAAC,CAAC,CAAC;gBACxD,CAAC;gBAED,IAAI,UAAU,GAAG,EAAC,SAAS,EAAE,UAAU,EAAC,CAAC;gBAEzC,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE;oBAC1C,MAAM,EAAE,MAAM;oBACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;iBACjC,CAAC,CAAC;YACP,CAAC;SAAA;IACH,CAAC;IArRD;QAAC,0BAAM,CAAC,wBAAI,CAAC,EAAE,CAAC,iCAAU,CAAC,CAAC;;eAAA;IACf,eAAO,UAoRnB,CAAA;;;;;;;;;;;;;;;;;;;;;;IClUD;QAWE,YAAoB,OAAgB,EAAU,KAAY,EAAU,MAAc;YAA9D,YAAO,GAAP,OAAO,CAAS;YAAU,UAAK,GAAL,KAAK,CAAO;YAAU,WAAM,GAAN,MAAM,CAAQ;YAVlF,YAAO,GAAY,QAAQ,CAAC;YAC5B,WAAM,GAAmB,EAAE,CAAC;YAC5B,eAAU,GAAmB,EAAE,CAAC;YAChC,eAAU,GAAY,CAAC,CAAC;YACxB,kBAAa,GAAY,CAAC,CAAC;YAC3B,uBAAkB,GAAa,KAAK,CAAC;YACrC,kBAAa,GAAY,EAAE,CAAC;YAC5B,qBAAgB,GAAY,EAAE,CAAC;YAC/B,eAAU,GAAY,EAAE,CAAC;QAIzB,CAAC;QAEK,QAAQ,CAAC,MAAM,EAAE,qBAAqB;;gBAC1C,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;gBAC7C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;gBACxE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC;SAAA;QAEO,KAAK,CAAC,MAAe,EAAE,IAAS;YAClC,IAAI,YAAY,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;YACxC,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC3D,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;gBACzD,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvD,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QACnB,CAAC;QAED,OAAO,CAAC,UAAmB;YACzB,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAExC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAE,CAAC;gBAC/D,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;YACpF,CAAC;YAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;YAE1E,IAAI,KAAK,GAAY,IAAI,CAAC,aAAa,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;YAC3D,aAAa,GAAG,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;YACvE,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;QAClC,CAAC;QAED,YAAY,CAAC,KAAW;YACpB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC;QAED,aAAa,CAAC,CAAC;YACb,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC;QAED,UAAU,CAAC,KAAU,EAAE,KAAa;YAClC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;QAED,SAAS,CAAC,KAAU,EAAE,KAAa;YACjC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YACnC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC9B,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,aAAa,CAAC,KAAU,EAAE,KAAa;YACrC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,YAAY,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;YAC5D,KAAK,CAAC,cAAc,EAAE,CAAC;QACzB,CAAC;IACH,CAAC;IArED;QAAC,0BAAM,CAAC,iBAAO,EAAE,aAAK,EAAE,uBAAM,CAAC;;cAAA;IAClB,cAAM,SAoElB,CAAA;;;;;;;;;;;;;;;;;;;;;;IChED;QAME,YAAoB,OAAgB,EAAU,cAA+B,EAAU,MAAc;YAAjF,YAAO,GAAP,OAAO,CAAS;YAAU,mBAAc,GAAd,cAAc,CAAiB;YAAU,WAAM,GAAN,MAAM,CAAQ;YALrG,YAAO,GAAW,OAAO,CAAC;QAQ1B,CAAC;QAEK,QAAQ,CAAC,MAAM,EAAE,qBAAqB;;gBAC1C,IAAI,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;YACrD,CAAC;SAAA;QA0BD,IAAI,YAAY;YACZ,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC;QAC7C,CAAC;QAED,UAAU;YACR,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;YACjC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;YAC3B,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAEK,KAAK,CAAC,KAAU;;gBACpB,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;SAAA;QAED,UAAU,CAAC,KAAa;YACtB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAExC,CAAC;QAED,IAAI,CAAC,KAAU;YACb,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC7C,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,IAAI,CAAC,KAAU;YACb,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YACnC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;YAC3B,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,KAAK,CAAC,KAAU;YACd,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YACtB,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAED,SAAS,CAAC,KAAU,EAAE,KAAa;YAEjC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAOK,cAAc,CAAE,KAAU,EAAE,gBAAgB;;gBAEhD,IAAI,IAAI,GAAG,IAAI,CAAC;gBAEhB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBAE9B,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAEnE,IAAI,CAAC,UAAU,EAAE,CAAC;gBAElB,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC;oBACvB,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;oBACtC,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACjC,CAAC;gBAED,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YAC1B,CAAC;SAAA;QAEK,YAAY,CAAE,KAAU,EAAE,YAAqB;;gBAEnD,IAAI,IAAI,GAAG,IAAI,CAAC;gBAEhB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;gBAExD,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YAC1B,CAAC;SAAA;IAEH,CAAC;IAnHD;QAAC,0BAAM,CAAC,iBAAO,EAAE,wBAAc,EAAE,uBAAM,CAAC;;aAAA;IAC3B,aAAK,QAkHjB,CAAA;;;;;;;;;;;;;;;;;;;;;;ICtHD;QAWE,YAAoB,OAAgB,EAAU,KAAY,EAAU,MAAc;YAA9D,YAAO,GAAP,OAAO,CAAS;YAAU,UAAK,GAAL,KAAK,CAAO;YAAU,WAAM,GAAN,MAAM,CAAQ;YAVlF,YAAO,GAAY,QAAQ,CAAC;YAC5B,WAAM,GAAmB,EAAE,CAAC;YAC5B,eAAU,GAAmB,EAAE,CAAC;YAChC,eAAU,GAAY,CAAC,CAAC;YACxB,kBAAa,GAAY,CAAC,CAAC;YAC3B,uBAAkB,GAAa,KAAK,CAAC;YACrC,kBAAa,GAAY,EAAE,CAAC;YAC5B,qBAAgB,GAAY,EAAE,CAAC;YAC/B,eAAU,GAAY,EAAE,CAAC;QAIzB,CAAC;QAEK,QAAQ,CAAC,MAAM,EAAE,qBAAqB;;gBAC1C,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;gBAC7C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;gBACxE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC;SAAA;QAEO,KAAK,CAAC,MAAe,EAAE,IAAS;YAClC,IAAI,YAAY,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;YACxC,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;gBACxD,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChE,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QACnB,CAAC;QAED,OAAO,CAAC,UAAmB;YACzB,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAExC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAE,CAAC;gBAC/D,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;YACpF,CAAC;YAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;YAE1E,IAAI,KAAK,GAAY,IAAI,CAAC,aAAa,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;YAC3D,aAAa,GAAG,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;YACvE,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;QAClC,CAAC;QAED,YAAY,CAAC,KAAW;YACpB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC;QAED,aAAa,CAAC,CAAC;YACb,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC;QAEK,UAAU,CAAC,KAAU,EAAE,QAAgB;;gBAE3C,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;gBAI5D,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC;oBACvB,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACvC,CAAC;YACH,CAAC;SAAA;IACH,CAAC;IA/DD;QAAC,0BAAM,CAAC,iBAAO,EAAE,aAAK,EAAE,uBAAM,CAAC;;cAAA;IAClB,cAAM,SA8DlB,CAAA;;;;;;;;;;;;;;;;;;;;;;IChED;QAIE,YAAoB,OAAgB,EAAU,MAAc;YAAxC,YAAO,GAAP,OAAO,CAAS;YAAU,WAAM,GAAN,MAAM,CAAQ;YAH5D,YAAO,GAAW,UAAU,CAAC;YAC7B,aAAQ,GAAmB,EAAE,CAAC;QAG9B,CAAC;QAEK,QAAQ;;gBACZ,IAAI,CAAC,QAAQ,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;YACnD,CAAC;SAAA;QAEK,QAAQ;;gBACV,IAAI,CAAC,QAAQ,EAAE,CAAC;YACpB,CAAC;SAAA;QAED,eAAe,CAAC,KAAU,EAAE,OAAgB;YAC1C,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3C,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,aAAa,CAAC,KAAU,EAAE,OAAgB;QAG1C,CAAC;IACH,CAAC;IAzBD;QAAC,0BAAM,CAAC,iBAAO,EAAE,uBAAM,CAAC;;gBAAA;IACX,gBAAQ,WAwBpB,CAAA;;;;;;;;;;;;;;ICtBD;QAKE,YAAoB,OAAgB,EAAU,cAA8B,EAAU,QAAkB;YAApF,YAAO,GAAP,OAAO,CAAS;YAAU,mBAAc,GAAd,cAAc,CAAgB;YAAU,aAAQ,GAAR,QAAQ,CAAU;QAExG,CAAC;QAED,eAAe,CAAC,MAA2B,EAAE,MAAc;YACzD,MAAM,CAAC,KAAK,GAAG,WAAW,CAAC;YAC3B,MAAM,CAAC,GAAG,CAAC;gBACT,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAG,IAAI,EAAE,QAAQ,EAAI,QAAQ,EAAE,UAAU,EAAI,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE;gBAChG,EAAE,KAAK,EAAE,QAAQ,EAAG,IAAI,EAAE,QAAQ,EAAI,QAAQ,EAAE,UAAU,EAAI,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE;gBAC1F,EAAE,KAAK,EAAE,UAAU,EAAG,IAAI,EAAE,UAAU,EAAI,QAAQ,EAAE,YAAY,EAAI,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE;gBAClG,EAAE,KAAK,EAAE,OAAO,EAAG,IAAI,EAAE,OAAO,EAAI,QAAQ,EAAE,SAAS,EAAI,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;gBACtF,EAAE,KAAK,EAAE,gBAAgB,EAAE,IAAI,EAAE,YAAY,EAAI,QAAQ,EAAE,cAAc,EAAI,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE;aAE/G,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC;QAOD,QAAQ;QAIR,CAAC;IACH,CAAC;IAlCD;QAAC,0BAAM,CAAC,iBAAO,EAAE,wBAAc,EAAE,mBAAQ,CAAC;;WAAA;IAC7B,WAAG,MAiCf,CAAA;;;;;ICzCD;sBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;;;;;;;;;;ICIF;QACE,YAAY,eAAe;YACzB,eAAe,CAAC,SAAS,CAAC,8BAA8B,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YACtE,eAAe,CAAC,SAAS,CAAC,4BAA4B,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACrE,CAAC;QAED,KAAK;QAGL,CAAC;QAED,IAAI;QAEJ,CAAC;IACH,CAAC;IAhBD;QAAC,2BAAM,EAAE;QACR,qCAAM,CAAC,0CAAe,CAAC;;wBAAA;IACX,wBAAgB,mBAc5B,CAAA;;;;;ICjBK,OAAQ,CAAC,MAAM,CAAC;QACpB,eAAe,EAAE,qBAAW,CAAC,KAAK;QAClC,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,kBAAkB,EAAE;aACpB,MAAM,CAAC,4BAA4B,EAAE,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC;aAC/D,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;IAChD,CAAC;IAhBe,iBAAS,YAgBxB,CAAA;;;;;;;;;;;;;;ICvBD,IAAI,MAAM,GAAG,8BAAU,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAG3C;QAAA;YAEE,gBAAW,GAAY,CAAC,CAAC;YAEf,aAAQ,GAAY,EAAE,CAAC;QAenC,CAAC;QAbC,QAAQ,CAAC,IAAI;YACX,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAC1B,CAAC;QACH,CAAC;QAGD,IAAI,aAAa;YACb,IAAI,KAAK,GAAY,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;YACtD,IAAI,GAAG,GAAG,KAAK,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;YACjC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;YACvD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACxC,CAAC;IACH,CAAC;IAlBC;QAAC,6BAAQ,CAAC,EAAC,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAC,CAAC;;8CAAA;IAEnD;QAAC,6BAAQ;;wCAAA;IACT;QAAC,6BAAQ;;2CAAA;IAQT;QAAC,gCAAY,CAAC,aAAa,CAAC;;8CAAA;IAb9B;QAAC,0BAAM,CAAC,OAAO,CAAC;;aAAA;IACH,aAAK,QAmBjB,CAAA;;;;;;;;;;;;;;;;;;;;;;ICnBD;QAmBE,YAAoB,OAAgB;YAAhB,YAAO,GAAP,OAAO,CAAS;QAEpC,CAAC;QAEK,QAAQ,CAAC,QAAQ;;gBAErB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YA0BlD,CAAC;SAAA;QAED,MAAM;YAEJ,KAAK,CAAC,cAAc,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;QACxC,CAAC;QAED,aAAa;YACX,MAAM,CAAC,IAAI,CAAC;QAId,CAAC;IACH,CAAC;IAjED;QAAC,0BAAM,CAAC,iBAAO,CAAC;;iBAAA;IACH,iBAAS,YAgErB,CAAA;;;;;ICrED,mBAA0B,MAA8B;IAExD,CAAC;IAFe,iBAAS,YAExB,CAAA;;;ACJD;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["import {inject, Lazy, autoinject, singleton} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-fetch-client';\n\n// polyfill fetch client conditionally\n//const fetch = !self.fetch ? System.import('isomorphic-fetch') : Promise.resolve(self.fetch);\n\n\nexport interface ITrack {\n  id: number;\n  title: string;\n  path: string;\n  album: string;\n  artist: string;\n  album_id: number,\n  year: number\n}\n\nexport class Speaker {\n  id: string;\n  name: string;\n  selected: boolean;\n  volume : number;\n\n  constructor(id: string, name: string, selected: boolean) {\n     this.id = id;\n     this.name = name;\n     this.selected = selected;\n  }\n}\n\nexport interface IAlbum {\n  id: number;\n  album: string;\n  albumartist: string;\n  albumtype: string;\n}\n\nexport class QueueContainer {\n    queued_tracks : Array<ITrack>;\n\n    constructor() {\n        this.resetQueue();\n    }\n\n    resetQueue() {\n        this.queued_tracks = new Array<ITrack>();\n    }\n\n    addToQueue(track : ITrack) {\n        this.queued_tracks.push(track);\n    }\n}\n\n@inject(Lazy.of(HttpClient))\nexport class AllPlay {\n  debug : boolean = false;\n  tracks: Array<ITrack> = [];\n  //speakers: Array<Speaker> = [];\n  \n  http: HttpClient;\n\n  constructor(private getHttpClient: () => HttpClient) {\n    this.http = this.getHttpClient();\n\n    let self = this;\n\n    this.http.configure(config => {\n      config\n        .useStandardConfiguration()\n        .withBaseUrl('http://192.168.1.6:5000/')\n        .withDefaults({\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json',\n                    }\n                })\n        .withInterceptor({\n            request(request) {\n                // if(self.debug) {\n                //   //console.log(`Requesting ${request.method} ${request.url}`);\n                //   let jsonTracks = require(\"./json/tracks.json\");\n                //   return new Response(JSON.stringify(jsonTracks));   // Fake Data\n                // }\n\n                return request; // you c = an return a modified Request, or you can short-circuit the request by returning a Response\n            },\n            response(response) {\n\n                return response;\n            }\n        })\n    });\n\n    this.getSpeakers();\n  }\n\n  handleErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n    return response;\n  }\n\n  async fetchTracks(): Promise<void> {\n\n    // ensure fetch is polyfilled before we create the http client\n    await fetch;\n\n    const response = await this.http.fetch('tracks', {\n        method: 'get',\n        //dataType : 'json'\n    });\n\n    let result = await response.json();\n    this.tracks = result['items'];\n    console.log(this);\n  }\n\n  async getTracks() {\n      if (this.tracks.length <= 0) {\n          await this.fetchTracks();\n      }\n\n      return this.tracks;\n  }\n\n  getTrack(id: number) {\n      this.getTracks();\n      return this.tracks.filter(track => track.id === +id)[0];\n  }\n\n  async getAlbums(): Promise<Array<IAlbum>> {\n\n    // ensure fetch is polyfilled before we create the http client\n    await fetch;\n\n    const response = await this.http.fetch('albums', {\n        method: 'get',\n    });\n\n    let result = await response.json();\n    return result['albums'];\n  }\n\n  async getTracksForAlbum(album_id : number): Promise<Array<ITrack>> {\n\n    // ensure fetch is polyfilled before we create the http client\n    await fetch;\n\n    const response = await this.http.fetch('albumtracks/' + album_id, {\n        method: 'get',\n    });\n\n    let result = await response.json();\n    return result['items'];\n  }\n\n  private async addToQueue(track: ITrack) {\n    let parameters = { 'track_id': track.id, 'path': track.path };\n    await this.http.fetch('add_to_queue', {\n        method: 'post',\n        body: JSON.stringify(parameters)\n    });\n    console.log(\"adding to queue \" + track.path);\n  }\n\n  async setupQueueMode(mode : boolean) {\n    await fetch;\n\n    let parameters = {'mode': mode };\n    this.http.fetch('set_queue_mode', {\n        method: 'post',\n        body: JSON.stringify(parameters)\n    });\n  }\n\n  async saveQueue(name : string, tracks : Array<ITrack>) {\n    await fetch;\n\n    let parameters = {'name' : name, 'tracks' : tracks}\n\n    this.http.fetch('save_playlist', {\n        method: 'post',\n        body: JSON.stringify(parameters)\n    });\n  }\n\n  async getPlaylists() {\n    await fetch;\n\n    let response = await this.http.fetch('playlists');\n    let result = await response.json();\n    let playlists = result['items'];\n    return playlists;\n  }\n\n  async getPlaylist(name : string) : Promise<ITrack[]> {\n    await fetch;\n\n    let response = await this.http.fetch('playlist/' + name);\n    let result = await response.json();\n    let tracks = result['items'];\n    return tracks;\n  }\n\n  async updateTrackMetadata(track: ITrack): Promise<void> {\n    // ensure fetch is polyfilled before we create the http client\n    await fetch;\n\n    let parameters = { 'item': track };\n    this.http.fetch('update', {\n        method: 'post',\n        body: JSON.stringify(parameters)\n    });\n  }\n\n  async pause(): Promise<void> {\n    // ensure fetch is polyfilled before we create the http client\n    await fetch;\n\n    this.http.fetch('pause', {\n        method: 'get'\n    });\n  }\n\n  async stop(): Promise<void> {\n    // ensure fetch is polyfilled before we create the http client\n    await fetch;\n\n    this.http.fetch('stop', {\n        method: 'post'\n    })\n    .catch(this.handleErrors) \n    {\n    };\n  }\n\n  async play_queue(queueContainer : QueueContainer): Promise<void> {\n    // ensure fetch is polyfilled before we create the http client\n    await fetch;\n\n    this.setupQueueMode(true);\n\n    // Send queued items\n    for (let i = 0; i < queueContainer.queued_tracks.length; i++) {\n        await this.addToQueue(queueContainer.queued_tracks[i]);\n    } \n\n    this.http.fetch('playqueue', {\n        method: 'post'\n    });\n  }\n\n  async reset_queue() {\n    await this.http.fetch('reset_queue', {\n        method: 'post'\n    });\n  }\n\n  async empty_queue() {\n    await this.http.fetch('empty_queue', {\n        method: 'post'\n    });\n  }\n\n  async playTrack(track : ITrack): Promise<void> {\n    // ensure fetch is polyfilled before we create the http client\n    await fetch;\n\n    this.setupQueueMode(false);  // play individual song stops playing queue\n\n    let parameters = { 'track_id': track.id };\n    this.http.fetch('playtrack', {\n        method: 'post',\n        // headers: {\n        //     'Content-Type': 'application/json'\n        // },\n        body: JSON.stringify(parameters)\n    });\n  }\n  \n  async adjustVolume(speaker: Speaker): Promise<void> {\n    // ensure fetch is polyfilled before we create the http client\n    await fetch;\n\n    let parameters = { 'device_id' : speaker.id,  'volume': speaker.volume};\n    this.http.fetch('adjust_volume', {\n        method: 'post',\n        body: JSON.stringify(parameters)\n    });\n  }\n\n  async getSpeakers(): Promise<Array<Speaker>> {\n\n    await fetch;\n    let tmp = new Array<Speaker>();\n    \n    const response = await this.http.fetch('get_devices', { \n        method: 'get',\n    });\n\n    let result = await response.json();\n    let speakers = await result['devices'];\n    for (let s of speakers) {\n        tmp.push(new Speaker(s.id, s.name, s.selected))\n    }\n    return tmp;\n\n    // for (let i = 0; i < speakers.length; i++) {\n    //     let s = speakers[i];\n    //     speakerIds.push({'id': s.id, 'selected': s.selected});\n    //   }\n  }\n\n  async selectSpeakers(speakers : Array<Speaker>) {\n\n      let speakerIds = Array<any>();\n\n      for (let i = 0; i < speakers.length; i++) {\n        let s = speakers[i];\n        speakerIds.push({'id': s.id, 'selected': s.selected});\n      }\n\n      let parameters = {'devices': speakerIds};\n\n      await this.http.fetch('set_active_players', {\n        method: 'post',\n        body: JSON.stringify(parameters)\n      });\n  }\n}\n","import {inject, Lazy, autoinject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-fetch-client';\nimport {Router} from 'aurelia-router';\nimport {AllPlay, ITrack} from './allplay';\nimport {Queue} from './queue';\n\n\n@inject(AllPlay, Queue, Router)\nexport class Tracks {\n  heading : string = 'Tracks';\n  tracks : Array<ITrack> = [];\n  pageTracks : Array<ITrack> = [];\n  activePage : number = 1;\n  numberOfPages : number = 1;\n  showFirstLastPages : boolean = false;\n  tracksPerPage : number = 25;\n  visiblePageLinks : number = 16;\n  searchText : string = \"\";\n\n  constructor(private allplay: AllPlay, private queue: Queue, private router: Router) {\n\n  }\n\n  async activate(params, navigationInstruction): Promise<void> {\n    this.tracks = await this.allplay.getTracks();\n    this.numberOfPages = Math.ceil(this.tracks.length / this.tracksPerPage);\n    this.setPage(1);\n  }\n\n  private match(search : string, item: any) : boolean {\n        let lcase_search = search.toLowerCase();\n        if((item['title'].toLowerCase().indexOf(lcase_search) > -1) ||\n        (item['artist'].toLowerCase().indexOf(lcase_search) > -1) ||\n        (item['album'].toLowerCase().indexOf(lcase_search) > -1)) {\n            return true;\n        }\n        return false;\n  }\n\n  setPage(pageNumber : number) {\n    let filteredItems = this.tracks.slice();\n\n    if (this.searchText !== undefined && this.searchText.length > 0)  {\n        filteredItems = this.tracks.filter((item) => this.match(this.searchText, item)); \n    }\n\n    this.numberOfPages = Math.ceil(filteredItems.length / this.tracksPerPage);\n\n    let start : number = this.tracksPerPage * (pageNumber - 1);\n    filteredItems = filteredItems.slice(start, start + this.tracksPerPage); \n    this.pageTracks = filteredItems;\n  }\n\n  onSearchText(event : any) {\n      this.setPage(1);\n  }\n  \n  onPageChanged(e) {\n    this.setPage(e.detail);\n  }\n\n  addToQueue(event: any, track: ITrack) {\n    this.queue.addToQueue(track);\n  }\n\n  playTrack(event: any, track: ITrack) {\n    this.allplay.stop();\n    this.allplay.setupQueueMode(false);\n    this.allplay.playTrack(track);\n    return false;\n  }\n  \n  gotoTrackEdit(event: any, track: ITrack) {\n    this.router.navigateToRoute('track-edit', { id: track.id });\n    event.preventDefault();\n  }\n}\n","import {inject, Lazy, autoinject} from 'aurelia-framework';\n//import {DialogService} from 'aurelia-dialog';\nimport {HttpClient} from 'aurelia-fetch-client';\nimport {Router} from 'aurelia-router';\nimport {AllPlay, ITrack, QueueContainer} from './allplay';\nimport {Tracks} from './tracks';\n\n// polyfill fetch client conditionally\n//const fetch = !self.fetch ? System.import('isomorphic-fetch') : Promise.resolve(self.fetch);\n\n\n@inject(AllPlay, QueueContainer, Router)\nexport class Queue {\n  heading: string = 'Queue';\n  private playlists : string[];\n  loadDialog : any;\n  saveDialog : any;\n\n  constructor(private allplay: AllPlay, private queueContainer : QueueContainer, private router: Router) {\n\n    \n  }\n\n  async activate(params, navigationInstruction): Promise<void> {\n    this.playlists = await this.allplay.getPlaylists();\n  }\n\n  // async loadPlaylist(event: any) {\n\n  //   let state = {'queue' : this, 'choosePlaylist' : true};\n\n  //   // this.dialogService.open({ viewModel: Playlist, model : state }).then(response => {\n\n  //   //     if (!response.wasCancelled) {\n \t//   // //console.log(\"here\");\n  //   //     }\n  //   //   });\n\n  //   return true;\n  // }\n\n  // async savePlaylist(event: any) {\n\n  //   // let state = {'queue' : this, 'choosePlaylist' : false};\n\n  //   // this.dialogService.open({ viewModel: Playlist, model : state }).then(response => {\n  //   //   });\n\n  //   return true;\n  // }\n\n  get queuedTracks() : Array<ITrack> {\n      return this.queueContainer.queued_tracks;\n  }\n\n  resetQueue() {\n    this.queueContainer.resetQueue();\n    this.allplay.empty_queue();\n    return true;\n  }\n\n  async reset(event: any) {\n    this.resetQueue();\n    return true;\n  }\n\n  addToQueue(track: ITrack) {\n    this.queueContainer.addToQueue(track);\n    //this.allplay.addToQueue(track);\n  }\n\n  play(event: any) {\n    this.allplay.play_queue(this.queueContainer);\n    return true;\n  }\n\n  stop(event: any) {\n    this.allplay.setupQueueMode(false);\n    this.allplay.stop();\n    this.allplay.reset_queue();\n    return true;\n  }\n\n  pause(event: any) {\n    this.allplay.pause();\n  \treturn true;\n  }\n\n  playTrack(event: any, track: ITrack) {\n    //this.allplay.setupAutoMode(false);\n    this.allplay.playTrack(track);\n    return true;\n  }\n\n  // gotoTrackEdit(event: any, track: ITrack) {\n  //   this.tracks.gotoTrackEdit(event, track);\n  // \treturn true;\n  // }\n\n  async selectPlaylist (event: any, selectedPlaylist) {\n\n    let self = this;\n\n    console.log(selectedPlaylist);\n\n    let tracks = await this.allplay.getPlaylist(selectedPlaylist.name);\n\n    this.resetQueue();\n\n    for (let track of tracks) {\n        console.log(\"in loop: \" + track.path);\n        await this.addToQueue(track);\n    }\n\n    this.loadDialog.close();\n  }\n\n  async savePlaylist (event: any, playListName : string) {\n\n    let self = this;\n\n    this.allplay.saveQueue(playListName, this.queuedTracks);\n\n    this.saveDialog.close();\n  }\n\n}\n","import {inject, Lazy, autoinject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-fetch-client';\nimport {Router} from 'aurelia-router';\nimport {AllPlay, IAlbum} from './allplay';\nimport {Queue} from './queue';\n\n\n@inject(AllPlay, Queue, Router)\nexport class Albums {\n  heading : string = 'Albums';\n  albums : Array<IAlbum> = [];\n  pageAlbums : Array<IAlbum> = [];\n  activePage : number = 1;\n  numberOfPages : number = 1;\n  showFirstLastPages : boolean = false;\n  albumsPerPage : number = 25;\n  visiblePageLinks : number = 16;\n  searchText : string = \"\";\n\n  constructor(private allplay: AllPlay, private queue: Queue, private router: Router) {\n\n  }\n\n  async activate(params, navigationInstruction): Promise<void> {\n    this.albums = await this.allplay.getAlbums();\n    this.numberOfPages = Math.ceil(this.albums.length / this.albumsPerPage);\n    this.setPage(1);\n  }\n\n  private match(search : string, item: any) : boolean {\n        let lcase_search = search.toLowerCase();\n        if((item['album'].toLowerCase().indexOf(lcase_search) > -1) ||\n           (item['albumartist'].toLowerCase().indexOf(lcase_search) > -1)) {\n            return true;\n        }\n        return false;\n  }\n\n  setPage(pageNumber : number) {\n    let filteredItems = this.albums.slice();\n\n    if (this.searchText !== undefined && this.searchText.length > 0)  {\n        filteredItems = this.albums.filter((item) => this.match(this.searchText, item)); \n    }\n\n    this.numberOfPages = Math.ceil(filteredItems.length / this.albumsPerPage);\n\n    let start : number = this.albumsPerPage * (pageNumber - 1);\n    filteredItems = filteredItems.slice(start, start + this.albumsPerPage); \n    this.pageAlbums = filteredItems;\n  }\n\n  onSearchText(event : any) {\n      this.setPage(1);\n  }\n  \n  onPageChanged(e) {\n    this.setPage(e.detail);\n  }\n\n  async addToQueue(event: any, album_id: number) {\n\n    let tracks = await this.allplay.getTracksForAlbum(album_id);\n \n    //this.queue.resetQueue();\n\n    for (let track of tracks) {\n        await this.queue.addToQueue(track);\n    }\n  }\n}\n","import {inject, Lazy, autoinject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-fetch-client';\nimport {Router} from 'aurelia-router';\nimport {AllPlay, Speaker} from './allplay';\n\n@inject(AllPlay, Router)\nexport class Speakers {\n  heading: string = 'Speakers';\n  speakers: Array<Speaker> = [];\n\n  constructor(private allplay: AllPlay, private router: Router) {\n  }\n\n  async discover() {\n    this.speakers = await this.allplay.getSpeakers();\n  }\n\n  async activate() {\n      this.discover();\n  }\n\n  speakerSelected(event: any, speaker: Speaker) {\n    this.allplay.selectSpeakers(this.speakers);\n    return true;\n  }\n\n  volumeChanged(event: any, speaker: Speaker) {\n    //this.allplay.adjustVolume(speaker);\n    //alert(speaker.volume);\n  }\n}\n","import {Aurelia} from 'aurelia-framework';\nimport {Router, RouterConfiguration} from 'aurelia-router';\nimport {inject} from 'aurelia-framework';\nimport {AllPlay, QueueContainer} from './allplay';\nimport {Speakers} from './speakers';\n//import {MdRange} from 'aurelia-materialize-bridge';\n\n@inject(AllPlay, QueueContainer, Speakers)\nexport class App {\n  router: Router;\n  //primaryColor = '#00bcd4';\n  //accentColor = '#2bbbad';\n\n  constructor(private allplay: AllPlay, private queueContainer: QueueContainer, private speakers: Speakers) {\n      //speakers.setup();\n  }\n\n  configureRouter(config: RouterConfiguration, router: Router) {\n    config.title = 'Partyzone';\n    config.map([\n      { route: ['', 'tracks'],  name: 'tracks',   moduleId: './tracks',   nav: true, title: 'Tracks' },\n      { route: 'albums',  name: 'albums',   moduleId: './albums',   nav: true, title: 'Albums' },\n      { route: 'speakers',  name: 'speakers',   moduleId: './speakers',   nav: true, title: 'Speakers' },\n      { route: 'queue',  name: 'queue',   moduleId: './queue',   nav: true, title: 'Queue' },\n      { route: 'track-edit/:id', name: 'track-edit',   moduleId: './track-edit',   nav: false, title: 'Track Edit' },\n      //{ route: 'partyzone_event/:event_type', name: 'partyzone_event',   moduleId: './partyzone_event',   nav: false, title: 'Partyzone Event' },\n    ]);\n\n    this.router = router;\n  }\n\n  // getBaseUrl() {\n  //   var re = new RegExp(/^.*\\//);\n  //   return re.exec(window.location.href).toString();\n  // }\n\n  activate() {\n\n    //let base : string = this.getBaseUrl();\n    //this.allplay.setupAutoMode(false);\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import { noView } from 'aurelia-templating';\nimport { inject } from 'aurelia-dependency-injection';\nimport { EventAggregator } from 'aurelia-event-aggregator';\n//import { nprogress } from 'nprogress';\n\n@noView()\n@inject(EventAggregator)\nexport class LoadingIndicator {\n  constructor(eventAggregator) {\n    eventAggregator.subscribe('router:navigation:processing', this.start);\n    eventAggregator.subscribe('router:navigation:complete', this.done);\n  }\n\n  start() {\n    // nprogress.start();\n    // nprogress.inc();\n  }\n\n  done() {\n    //nprogress.done();\n  }\n}\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .developmentLogging()\n    .plugin('aurelia-materialize-bridge', bridge => bridge.useAll())\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import { bindingMode } from 'aurelia-binding';\nimport { bindable } from 'aurelia-templating';\nimport {LogManager, View, inject, computedFrom} from 'aurelia-framework';\n\nlet logger = LogManager.getLogger('pager');\n\n@inject(Element)\nexport class Pager {\n  @bindable({defaultBindingMode: bindingMode.twoWay})\n  currentPage : number = 0;\n  @bindable items;\n  @bindable pageSize : number = 10;\n\n  goToPage(page) {\n    if (page > 0) {\n      this.currentPage = page;\n    }\n  }\n\n  @computedFrom('currentPage')\n  get selectedItems() {\n      let start : number = this.pageSize * this.currentPage;\n      let end = start + +this.pageSize;\n      end = Math.min(this.items.length - this.pageSize, end);\n      return this.items.slice(start, end);\n  }\n}","//import {computedFrom} from 'aurelia-framework';\nimport {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-fetch-client';\nimport {Tracks} from './tracks';\nimport {AllPlay, ITrack} from './allplay';\n\n@inject(AllPlay)\nexport class TrackEdit {\n  track: ITrack;\n  //http: HttpClient;\n\n  //heading: string = 'Welcome to the Aurelia Navigation App';\n  //firstName: string = 'John';\n  //lastName: string = 'Doe';\n  //previousValue: string = this.fullName;\n\n  //Getters can't be directly observed, so they must be dirty checked.\n  //However, if you tell Aurelia the dependencies, it no longer needs to dirty check the property.\n  //To optimize by declaring the properties that this getter is computed from, uncomment the line below\n  //as well as the corresponding import above.\n  //@computedFrom('firstName', 'lastName')\n  //get fullName(): string {\n  //  return `${this.firstName} ${this.lastName}`;\n  //}\n\n  //constructor(private getHttpClient: () => HttpClient, private tracks: Array<ITrack>[]) {\n  constructor(private allplay: AllPlay) {\n    //console.log(tracks.getTracks());\n  }\n\n  async activate(idObject) {\n    //alert(idObject.id);\n    this.track = this.allplay.getTrack(idObject.id);\n    //console.log(this.tracks);\n    /*\n    await fetch;\n    const http = this.http = this.getHttpClient();\n\n    http.configure(config => {\n      config\n        .useStandardConfiguration()\n        .withBaseUrl('http://0.0.0.0:8337/');\n    });\n\n    const response = await http.fetch('tracks');\n    let result = await response.json();\n    this.tracks = result['items'];\n    */\n\n\n //   getTrack(id: number) {\n  \n //   return this.getTracks().toPromise()             \n //              .then(tracks => tracks.filter(track => track.id === id)[0])\n //              .catch(this.handleError);\n // }\n\n\n  }\n\n  submit() {\n    //this.previousValue = this.fullName;\n    alert(`TrackEdit, ${this.track.id}!`);\n  }\n\n  canDeactivate(): boolean {\n    return true;\n    //if (this.fullName !== this.previousValue) {\n    //  return confirm('Are you sure you want to leave?');\n    //}\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,null,null,null,null,null,null,null,null,null],"sourceRoot":"../src"}