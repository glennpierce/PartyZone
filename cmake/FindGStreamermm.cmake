# - Try to find GStreamermm
# Once done this will define
#
#  GSTREAMERMM_FOUND - system has GStreamermm
#  GSTREAMERMM_INCLUDE_DIRS - the GStreamermm include directory
#  GSTREAMERMM_LIBRARIES - the libraries needed to use GStreamermm
#  GSTREAMERMM_DEFINITIONS - Compiler switches required for using GStreamermm
#  GSTREAMERMM_VERSION - the version of GStreamermm


#libgstreamermm-1.0.so                        
#libgstreamermm_get_plugin_defs-1.0.so

# Copyright (c) 2013, Dirk Van Haerenborgh

include(LibFindMacros)

if(NOT DEFINED GStreamermm_FIND_VERSION)
    set(GStreamermm_FIND_VERSION "1.0")
endif(NOT DEFINED GStreamermm_FIND_VERSION)

if(GSTREAMERMM_INCLUDE_DIRS AND
    GSTREAMERMM_LIBRARIES AND
    GSTREAMERMM_PLUGINDEFS_LIBRARY OR (GSTREAMERMM_VERSION_MAJOR GREATER 0) AND
    GSTREAMERMM_VERSION_MAJOR EQUAL GStreamermm_FIND_VERSION_MAJOR AND
    GSTREAMERMM_VERSION_MINOR EQUAL GStreamermm_FIND_VERSION_MINOR)

   # in cache already
   set(GStreamermm_FIND_QUIETLY TRUE)

else(GSTREAMERMM_INCLUDE_DIRS AND
      GSTREAMERMM_LIBRARIES AND
      GSTREAMERMM_PLUGINDEFS_LIBRARY OR (GSTREAMERMM_VERSION_MAJOR GREATER 0) AND
      GSTREAMERMM_VERSION_MAJOR EQUAL GStreamermm_FIND_VERSION_MAJOR AND
      GSTREAMERMM_VERSION_MINOR EQUAL GStreamermm_FIND_VERSION_MINOR)

   set(GStreamermm_FIND_QUIETLY FALSE)
   unset(GSTREAMERMM_INCLUDE_DIRS)
   unset(GSTREAMERMM_LIBRARIES)
   unset(GSTREAMERMM_PLUGINDEFS_LIBRARY)
   unset(GSTREAMERMM_VERSION)
   unset(GSTREAMERMM_VERSION_MAJOR)
   unset(GSTREAMERMM_VERSION_MINOR)

endif(GSTREAMERMM_INCLUDE_DIRS AND
       GSTREAMERMM_LIBRARIES AND
       GSTREAMERMM_PLUGINDEFS_LIBRARY OR (GSTREAMERMM_VERSION_MAJOR GREATER 0) AND
       GSTREAMERMM_VERSION_MAJOR EQUAL GStreamermm_FIND_VERSION_MAJOR AND
       GSTREAMERMM_VERSION_MINOR EQUAL GStreamermm_FIND_VERSION_MINOR)

if(NOT WIN32)
   FIND_PACKAGE(PkgConfig REQUIRED)
   # use pkg-config to get the directories and then use these values
   # in the find_path() and find_library() calls
   # don't make this check required - otherwise you can't use macro_optional_find_package on this one
   set(ENV{PKG_CONFIG_PATH} "${GStreamermm_ROOT}/lib/pkgconfig:${GStreamermm_ROOT}/lib64/pkgconfig")
   pkg_check_modules(PKG_GSTREAMERMM gstreamermm-${GStreamermm_FIND_VERSION_MAJOR}.${GStreamermm_FIND_VERSION_MINOR})

   set(GSTREAMERMM_DEFINITIONS ${PKG_GSTREAMERMM_CFLAGS})
   set(GSTREAMERMM_VERSION ${PKG_GSTREAMERMM_VERSION} CACHE INTERNAL "Gstreamermm version")
   
   #FIXME: this is a quick hack
   set(GSTREAMERMM_LIBRARY_DIRS ${PKG_GSTREAMERMM_LIBRARY_DIRS})

   THREE_PART_VERSION_TO_VARS(${GSTREAMERMM_VERSION} GSTREAMERMM_VERSION_MAJOR GSTREAMERMM_VERSION_MINOR GSTREAMERMM_VERSION_PATCH)
endif(NOT WIN32)

find_path(GSTREAMERMM_INCLUDE_DIRS gstreamermm.h
   PATHS
   ${PKG_GSTREAMERMM_INCLUDE_DIRS}
   PATH_SUFFIXES gstreamermm-${GStreamermm_FIND_VERSION_MAJOR}.${GStreamermm_FIND_VERSION_MINOR}
   )

find_library(GSTREAMERMM_LIBRARY NAMES gstreamermm-${GStreamermm_FIND_VERSION_MAJOR}.${GStreamermm_FIND_VERSION_MINOR}
   PATHS
   ${PKG_GSTREAMERMM_LIBRARY_DIRS}
   )

find_library(GSTREAMERMM_PLUGINDEFS_LIBRARY NAMES gstreamermm_get_plugin_defs-${GStreamermm_FIND_VERSION_MAJOR}.${GStreamermm_FIND_VERSION_MINOR}
   PATHS
   ${PKG_GSTREAMERMM_LIBRARY_DIRS}
   )

if(GSTREAMERMM_INCLUDE_DIRS)
else(GSTREAMERMM_INCLUDE_DIRS)
   message(STATUS "GStreamermm: WARNING: include dir not found")
endif(GSTREAMERMM_INCLUDE_DIRS)


if(GSTREAMERMM_LIBRARY)
   set(GSTREAMERMM_LIBRARIES ${GSTREAMERMM_LIBRARY})
else(GSTREAMERMM_LIBRARY)
   message(STATUS "GStreamermm: WARNING: library not found")
endif(GSTREAMERMM_LIBRARY)

if(GSTREAMERMM_PLUGINDEFS_LIBRARY)
   set(GSTREAMERMM_LIBRARIES ${GSTREAMERMM_LIBRARIES} ${GSTREAMERMM_BASE_LIBRARY})
else(GSTREAMERMM_PLUGINDEFS_LIBRARY)
   message(STATUS "GStreamermm: WARNING: plugin defs library not found")
endif(GSTREAMERMM_PLUGINDEFS_LIBRARY)


if(GSTREAMERMM_INCLUDE_DIRS AND GSTREAMERMM_LIBRARY AND GSTREAMERMM_PLUGINDEFS_LIBRARY OR (GSTREAMERMM_VERSION_MAJOR GREATER 0) )
   set(GSTREAMERMM_FOUND TRUE)
else(GSTREAMERMM_INCLUDE_DIRS AND GSTREAMERMM_LIBRARY AND GSTREAMERMM_PLUGINDEFS_LIBRARY OR (GSTREAMERMM_VERSION_MAJOR GREATER 0) )
   set(GSTREAMERMM_FOUND FALSE)
endif(GSTREAMERMM_INCLUDE_DIRS AND GSTREAMERMM_LIBRARY AND GSTREAMERMM_PLUGINDEFS_LIBRARY OR (GSTREAMERMM_VERSION_MAJOR GREATER 0) )

if(NOT GSTREAMERMM_FOUND)
   if(GStreamermm_FIND_REQUIRED)
      message(SEND_ERROR "Could NOT find GStreamermm")
   endif(GStreamermm_FIND_REQUIRED)
endif(NOT GSTREAMERMM_FOUND)

mark_as_advanced(GSTREAMERMM_INCLUDE_DIRS GSTREAMERMM_LIBRARY GSTREAMERMM_PLUGINDEFS_LIBRARY GSTREAMERMM_LIBRARIES GSTREAMERMM_VERSION)
